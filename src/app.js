const express = require('express')
const app = express()
const debug = require('debug')('app')
const config = require('../config/default')

const cookiePerser = require('cookie-parser')
const customerRoutes = require('./routes/customerRoutes')
const vendoRoutes = require('./routes/vendorRoutes')
const authRoutes = require('./routes/authRoutes')
const productRoutes = require('./routes/productRoutes')
const reviewRoutes = require('./routes/reviewRoutes')
const cartRoutes = require('./routes/cartRoutes')
const checkoutRoutes = require('./routes/checkoutRoute')
const orderRoutes = require('./routes/orderRoutes')
const salesRoutes = require('./routes/salesRoutes')
const driverRoutes = require('./routes/driverRoutes')
const adminRoutes = require('./routes/adminRoutes')
const productRoutesForAdmin = require('./routes/productRoutesForAdmin')
const vendorRoutesForAdmin = require('./routes/vendorRoutesForAdmin')
const adminOrderRoutes = require('./routes/adminOrderRoutes')

if (!config.jwt.secret) {
  debug('FATAL ERROR, JWT_SECRET IS NOT SET')
  process.exit(1)
} else debug('JWT_SECRET IS NOW SET')

debug(config.db.database)
debug(config.email.user)
debug(config.email.pass)
debug(config.session.secret)

app.use(express.json())
app.use(cookiePerser())

app.use('/api/auth', authRoutes)
app.use('/api/customers', customerRoutes)
app.use('/api/vendors', vendoRoutes)
app.use('/api/products', productRoutes)
app.use('/api/reviews', reviewRoutes)
app.use('/api/cart', cartRoutes)
app.use('/api/checkout', checkoutRoutes)
app.use('/api/order', orderRoutes)
app.use('/api/sales', salesRoutes)
app.use('/api/drivers', driverRoutes)
app.use('/api/admins', adminRoutes)
app.use('/api/admin-products', productRoutesForAdmin)
app.use('/api/admin-vendors', vendorRoutesForAdmin)
app.use('/api/admin-orders', adminOrderRoutes)

app.get('/', (req, res) => res.send('Home'))

const port = process.env.PORT || 5000
app.listen(port, () => debug(`Listening on port ${port}...`))
